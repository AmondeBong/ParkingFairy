# Generated by Django 4.1 on 2023-11-25 11:49

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.CharField(max_length=25, unique=True, verbose_name='ID')),
                ('password', models.CharField(max_length=256, verbose_name='PW')),
                ('check_email', models.EmailField(max_length=128, null=True, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=70, null=True, verbose_name='username')),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date_joined')),
                ('birthday_year', models.CharField(max_length=4)),
                ('birthday_month', models.CharField(max_length=2)),
                ('birthday_date', models.CharField(max_length=2)),
                ('gender', models.CharField(max_length=5)),
                ('mobile', models.CharField(default='01000000000', max_length=16)),
                ('car', models.JSONField(default=dict, verbose_name='json')),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'my_user',
            },
        ),
    ]
